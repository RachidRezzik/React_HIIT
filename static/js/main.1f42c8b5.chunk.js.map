{"version":3,"sources":["components/Header.js","components/Timer.js","components/Preferences.js","App.js","index.js","audioClip/boxingBell.mp3","audioClip/champions.mp3"],"names":["headerStyle","textAlign","background","color","borderRadius","padding","Header","style","width","margin","Timer","getStyle","props","isRest","previousPeriod","periods","workRest","nextPeriod","roundsCompleted","workout","rounds","this","workoutFinished","className","marginRight","transform","fontSize","cursor","onClick","minutes","seconds","marginLeft","handleTimer","isRunning","resetTime","Component","boxingSound","Howl","src","Bell","championsSound","Champions","Howler","volume","Preferences","state","workMin","workSec","restMin","restSec","elapsedTime","previousTime","workoutSaved","workRestHandler","periodChangeType","console","log","setState","prevState","Math","floor","play","tick","time","now","Date","seconds_passed","Number","toString","length","handleResetTime","roundSelect","React","createRef","workMinSelect","workSecSelect","restMinSelect","restSecSelect","saveWorkoutInfo","stop","current","value","map","intervalID","setInterval","paddingBottom","ref","display","marginTop","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1f42c8b5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div style={headerStyle}>\r\n            <h1>HIIT Workout Timer</h1>\r\n            <p style={{width: \"90%\", margin: \"0px auto\"}}>Save Your Rounds/Work/Rest Preferences to Start Your Workout</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    textAlign: 'center',\r\n    background: 'black',\r\n    color: 'white',\r\n    borderRadius: '5px 5px 0px 0px',\r\n    // marginBottom: '-15px',\r\n    padding: '5px'\r\n}\r\n\r\n\r\nexport default Header","import React, { Component } from 'react'\r\n\r\nexport class Timer extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            background: this.props.isRest ? \"red\" : \"rgb(7, 197, 7)\",\r\n            textAlign: \"center\",\r\n            padding: \"10px\",\r\n            borderRadius: \"0px 0px 5px 5px\"\r\n        }\r\n    }\r\n\r\n    previousPeriod = () => {\r\n        if (this.props.periods !== 0){\r\n            this.props.workRest(\"previous\")\r\n        }\r\n    }\r\n\r\n    nextPeriod = () => {\r\n        if (this.props.roundsCompleted !== this.props.workout[0].rounds){\r\n            this.props.workRest(\"next\")\r\n        }\r\n    }\r\n\r\n    render() {     \r\n        let workoutFinished = this.props.workoutFinished\r\n        if(!workoutFinished){\r\n            return <div style = {this.getStyle()}>\r\n                <div className=\"time\">\r\n                        <span style={{marginRight: \"7.5px\", transform: \"rotate(180deg)\", fontSize: \"17.5px\", cursor: \"pointer\"}} onClick={this.previousPeriod}>➤</span>\r\n                        <h2> {this.props.minutes}</h2>\r\n                        <span>:</span>\r\n                        <h2> {this.props.seconds}</h2>\r\n                        <span style={{marginLeft: \"7.5px\", fontSize: \"17.5px\", cursor: \"pointer\"}} onClick={this.nextPeriod}>➤</span>\r\n                    </div>\r\n                    <button onClick={this.props.handleTimer}>{this.props.isRunning ? 'Stop' : 'Start'}</button> \r\n                    <button style={{marginLeft: \"2.5px\"}} onClick={this.props.resetTime}>Reset Duration</button>\r\n                    <h3>Rounds Completed: <span>{this.props.roundsCompleted}/{this.props.workout[0].rounds}</span></h3>\r\n            </div>       \r\n        } else{\r\n            return <div style = {{background: \"blue\", padding: \"20px\", color: \"white\", borderRadius: \"0px 0px 5px 5px\"}}>\r\n                        <h1>Your Workout is Finished! Great Job!</h1>\r\n                    </div> \r\n        }\r\n    }\r\n}\r\n\r\nexport default Timer\r\n","import React, { Component } from 'react'\r\nimport Timer from './Timer'\r\nimport Bell from '../audioClip/boxingBell.mp3'\r\nimport Champions from '../audioClip/champions.mp3'\r\nimport {Howl, Howler} from \"howler\"\r\n\r\nconst boxingSound = new Howl({\r\n    src: [Bell]\r\n})\r\nconst championsSound = new Howl({\r\n    src: [Champions]\r\n})\r\n\r\nHowler.volume(0.05)\r\n\r\nexport class Preferences extends Component {\r\n    state = { \r\n    workout: [\r\n        {\r\n        rounds: 0,\r\n        workMin: \"00\",\r\n        workSec: \"00\",\r\n        restMin: \"00\",\r\n        restSec: \"00\"\r\n        }\r\n    ],\r\n    isRunning: false,\r\n    workoutFinished: false,\r\n    elapsedTime: 0,\r\n    previousTime: 0,\r\n    isRest: false,\r\n    minutes: \"00\",\r\n    seconds: \"00\",\r\n    periods: 0,\r\n    roundsCompleted: 0,\r\n    workoutSaved: false\r\n    }\r\n    \r\n    //Timer Handlers\r\n    componentDidMount() {\r\n        this.intervalID = setInterval(() => this.tick(), 100)\r\n    }\r\n    \r\n    workRestHandler = (periodChangeType) => {\r\n        console.log(this.state.periods, this.state.roundsCompleted)\r\n        if (!(this.state.isRest === true && this.state.periods === ((this.state.workout[0].rounds * 2) - 1)) || (periodChangeType === \"previous\" && this.state.periods !== 0)){\r\n            if (this.state.workoutSaved === true){\r\n                if (periodChangeType === \"next\") {\r\n                    this.setState(prevState => ({\r\n                        periods: this.state.periods + 1\r\n                    }))\r\n                } else if (periodChangeType === \"previous\") {\r\n                    this.setState({\r\n                        periods: this.state.periods - 1\r\n                    })\r\n                }\r\n                console.log(this.state.periods)\r\n                this.setState(prevState => ({\r\n                    isRest: !prevState.isRest,\r\n                    elapsedTime: 0,\r\n                    roundsCompleted: Math.floor(prevState.periods/2)\r\n                }))\r\n                if (this.state.isRunning){\r\n                    boxingSound.play()\r\n                } \r\n            }        \r\n        } else if (this.state.isRest === true && this.state.periods === ((this.state.workout[0].rounds * 2) - 1)){\r\n            console.log(\"champion\")\r\n            this.setState(prevState => ({\r\n                isRunning: false,\r\n                previousTime: 0,\r\n                elapsedTime: 0,\r\n                minutes: \"00\",\r\n                seconds: \"00\",\r\n                roundsCompleted: Math.floor((prevState.periods + 1)/2),\r\n                workoutFinished: true\r\n            }))\r\n            championsSound.play()\r\n        }\r\n    } \r\n\r\n    tick = () => {\r\n        let time = \"\"\r\n        if (this.state.isRunning){\r\n            const now = Date.now()\r\n            this.setState(prevState => ({\r\n                previousTime:now,\r\n                elapsedTime: prevState.elapsedTime + (now - prevState.previousTime)\r\n            }))\r\n        }\r\n        const seconds_passed = Math.floor(this.state.elapsedTime / 1000)\r\n        if(this.state.isRest === false){\r\n            time = (Number(this.state.workout[0].workMin) * 60) + (Number(this.state.workout[0].workSec))\r\n        } else {\r\n            time = (Number(this.state.workout[0].restMin) * 60) + (Number(this.state.workout[0].restSec))\r\n        }\r\n        time = time - seconds_passed\r\n        let minutes = Math.floor(time/60)\r\n        minutes = `0${minutes}`\r\n        let seconds = time - (minutes*60)\r\n        if (seconds.toString().length === 1) {\r\n            seconds = `0${seconds}`\r\n        }\r\n        this.setState({\r\n            seconds: seconds,\r\n            minutes: minutes\r\n        })\r\n        if (this.state.isRunning === false && this.state.roundsCompleted === this.state.workout[0].rounds){\r\n            this.setState({\r\n                seconds: \"00\",\r\n                minutes: \"00\"\r\n            })\r\n        } \r\n        if ((this.state.workout[0].workMin !== \"00\" || this.state.workout[0].workSec !== \"00\") && (this.state.workout[0].restMin !== \"00\" || this.state.workout[0].restSec !== \"00\") && this.state.isRunning === true){\r\n            if (time === 0){\r\n                this.workRestHandler(\"next\")\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTimer = () => {\r\n        if ((this.state.workout[0].workMin !== \"00\" || this.state.workout[0].workSec !== \"00\") && (this.state.workout[0].restMin !== \"00\" || this.state.workout[0].restSec !== \"00\")){\r\n            this.setState(prevState => ({\r\n                isRunning: !prevState.isRunning\r\n            }))\r\n            if (!this.state.isRunning){\r\n                this.setState({\r\n                    previousTime: Date.now()\r\n                })\r\n            }\r\n            if (this.state.elapsedTime === 0){\r\n                boxingSound.play()\r\n            }\r\n        }\r\n    }\r\n\r\n    handleResetTime = () => {\r\n        if ((this.state.workout[0].workMin !== \"00\" || this.state.workout[0].workSec !== \"00\") && (this.state.workout[0].restMin !== \"00\" || this.state.workout[0].restSec !== \"00\")){\r\n            if(!this.state.isRunning){\r\n                this.setState({\r\n                    elapsedTime: 0,\r\n                    previousTime: 0\r\n                })\r\n            } else{\r\n                this.setState({\r\n                    elapsedTime: 0\r\n                })\r\n                boxingSound.play()\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    //REFS for Select Changes\r\n    roundSelect = React.createRef()\r\n    workMinSelect = React.createRef()\r\n    workSecSelect = React.createRef()\r\n    restMinSelect = React.createRef()\r\n    restSecSelect = React.createRef()\r\n\r\n\r\n    // User Saving Their Workout\r\n    saveWorkoutInfo = () => {\r\n        championsSound.stop()\r\n        if ((this.workMinSelect.current.value !== \"00\" || this.workSecSelect.current.value !== \"00\") && (this.restMinSelect.current.value !== \"00\" || this.restSecSelect.current.value !== \"00\") && this.roundSelect.current.value !== \"00\"){\r\n            let rounds = this.roundSelect.current.value\r\n            if (rounds[0] === \"0\"){\r\n                rounds = rounds[1]\r\n            }\r\n            this.setState({\r\n                workoutFinished: false,\r\n                workoutSaved: true,\r\n                isRunning: false,\r\n                elapsedTime: 0,\r\n                previousTime: 0,\r\n                isRest: false,\r\n                minutes: \"00\",\r\n                seconds: \"00\",\r\n                periods: 0,\r\n                roundsCompleted: 0,\r\n                workout: this.state.workout.map(workout => {\r\n                    workout.rounds = rounds\r\n                    workout.workMin = this.workMinSelect.current.value\r\n                    workout.workSec = this.workSecSelect.current.value\r\n                    workout.restMin = this.restMinSelect.current.value\r\n                    workout.restSec = this.restSecSelect.current.value\r\n                    return workout   \r\n                })\r\n            })\r\n        }\r\n    } \r\n\r\n    render() {\r\n        return (\r\n            <div style={{textAlign: 'center', background: 'lightgrey', paddingBottom: '0px', borderRadius: \"0px 0px 5px 5px\"}}>\r\n                <h3>Total Rounds (Work+Rest)</h3>\r\n                <select ref={this.roundSelect} >\r\n                    <option>00</option>\r\n                    <option>01</option>\r\n                    <option>02</option>\r\n                    <option>03</option>\r\n                    <option>04</option>\r\n                    <option>05</option>\r\n                    <option>06</option>\r\n                    <option>07</option>\r\n                    <option>08</option>\r\n                    <option>09</option>\r\n                    <option>10</option>\r\n                    <option>11</option>\r\n                    <option>12</option>\r\n                    <option>13</option>\r\n                    <option>14</option>\r\n                    <option>15</option>\r\n                </select>\r\n                <h3>Work Duration (MM:SS)</h3>\r\n                <div>\r\n                    <select ref={this.workMinSelect} >\r\n                        <option>00</option>\r\n                        <option>01</option>\r\n                        <option>02</option>\r\n                        <option>03</option>\r\n                        <option>04</option>\r\n                        <option>05</option>\r\n                    </select>\r\n                    <span style={{padding: '0px 5px'}}>:</span>\r\n                    <select ref={this.workSecSelect} >\r\n                        <option>00</option>\r\n                        <option>15</option>\r\n                        <option>30</option>\r\n                        <option>45</option>\r\n                    </select>\r\n                </div>\r\n                <h3>Rest Duration (MM:SS)</h3>\r\n                <div style={{paddingBottom: '10px'}}>\r\n                    <select ref={this.restMinSelect} >\r\n                    <option>00</option>\r\n                        <option>01</option>\r\n                        <option>02</option>\r\n                        <option>03</option>\r\n                        <option>04</option>\r\n                        <option>05</option>\r\n                    </select>\r\n                    <span style={{padding: '0px 5px'}}>:</span>\r\n                    <select ref={this.restSecSelect} >\r\n                        <option>00</option>\r\n                        <option>15</option>\r\n                        <option>30</option>\r\n                        <option>45</option>\r\n                    </select>\r\n                    <button style={{display:\"block\", margin: \"0px auto\", marginTop: \"20px\"}} onClick={this.saveWorkoutInfo}>Save/Update</button>\r\n                </div>  \r\n                <Timer \r\n                workout = {this.state.workout}\r\n                isRunning = {this.state.isRunning}  \r\n                isRest = {this.state.isRest}  \r\n                elapsedTime = {this.state.elapsedTime}    \r\n                previousTime = {this.state.previousTime}   \r\n                handleTimer = {this.handleTimer} \r\n                resetTime = {this.handleResetTime}\r\n                workRest = {this.workRestHandler}\r\n                minutes = {this.state.minutes}\r\n                seconds = {this.state.seconds}\r\n                periods = {this.state.periods}\r\n                roundsCompleted = {this.state.roundsCompleted}\r\n                workoutFinished = {this.state.workoutFinished}\r\n                workoutSaved = {this.state.workoutSaved}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Preferences\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header'\nimport Preferences from './components/Preferences'\n\n\n\nclass App extends Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <Header  />\n        <Preferences />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/boxingBell.fbed6af8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/champions.3e4af462.mp3\";"],"sourceRoot":""}